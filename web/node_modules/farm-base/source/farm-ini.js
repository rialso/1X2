
/*
 * 2015 FARM Staff 
 * v 0.0.1      ->      Starting release [09, 2015]

                                \\
                               (o>
                            \\_//)
                             \_/_)
_____________________________ _|_ _______________________________  


                           \|||/
                           (o o)
                  ------ooO-(_)-Ooo------
*/

"use strict";
;var farm = {
    /*
    e: errors,
    f: farm,
    n: navigator,
    r: roots,
    o: options,
    l: language,
    i: icons
    */
    e  :{
            10:{ id:10, text:'ERROR_FILE_NOT_FOUND' }
        },
    // ruta por defecto de options

    f  :{
            r:{ options:'./farm-opts.js' }
        },

    l  :{},
    n  :{},
    fn :{

        css: function(url, id) {
            var link = document.createElement("link");
            //link.type = "text/css";
            link.rel = "stylesheet";
            if(url){
                link.href = url;
            }
            if(id){
                var x = document.getElementById(id);
                if(typeof(x) != 'undefined' && x != null){document.getElementsByTagName("head")[0].removeChild(x);}
                link.id  = id;
            }
            document.getElementsByTagName("head")[0].appendChild(link);
            //document.getElementsByTagName("body")[0].appendChild(link);
        },

        style: function(id) {
            var link = document.createElement("style");
            //link.type = "text/css";
            link.rel = "stylesheet";
         
            if(id){
                var x = document.getElementById(id);
                if(typeof(x) != 'undefined' && x != null){document.getElementsByTagName("head")[0].removeChild(x);}
                link.id  = id;
            }
            document.getElementsByTagName("head")[0].appendChild(link);
        },

        js: function(src, id, callback) {
            var s = document.createElement('script');
            if(src){
                s.src = src;
            }
            if(id){
                var x = document.getElementById(id);
                if(typeof(x) != 'undefined' && x != null){document.body.removeChild(x);}
                s.id  = id;
            }
            s.async = true;
            /*
            if (callback){
                s.onreadystatechange = s.onload = function() {
                    var state = s.readyState;
                    if (!callback.done && (!state || /loaded|complete/.test(state))) {
                        callback.done = true;
                        callback();
                    }
                };
                s.onreadystatechange = s.onerror = function() {
                    callback(farm.e[10]);
                };
            }
            */
            if (callback){
                if (s.readyState){  //IE
                    s.onreadystatechange = function(){
                        if (s.readyState == "loaded" || s.readyState == "complete"){
                            s.onreadystatechange = null; 
                            callback();
                        }else{
                            callback(farm.e[10]);
                        }
                    };
                } else {  //Others
                    s.onload = function(){
                        callback();
                    };
                    s.onerror = function() {
                        callback(farm.e[10]);
                    };                    
                }
            }
            document.body.appendChild(s);
        },

        merge: function(obj1,obj2){
            var obj3 = {};
            for (var attrname in obj1) { obj3[attrname] = obj1[attrname]; }
            for (var attrname in obj2) { obj3[attrname] = obj2[attrname]; }
            return obj3;
        },

        //http://stackoverflow.com/questions/11197247/javascript-equivalent-of-jquerys-extend-method
        extend: function(){
            for(var i=1; i<arguments.length; i++)
                for(var key in arguments[i])
                    if(arguments[i].hasOwnProperty(key))
                        arguments[0][key] = arguments[i][key];

            return arguments[0];
        },

        cut_the_mustard: function( callback ){

            var obj = {}
            for(var index in farm.o.ctm){

                if( farm.o.ctm[index] ){
                    switch( index ) { 
                        case 'classList' : 
                            obj[index] = 'classList' in document.createElement('div');
                            break; 
                        case 'querySelector' : 
                            obj[index] = 'querySelector' in document; 
                            break; 
                        case 'localStorage' : 
                            obj[index] = 'localStorage' in window; 
                            break;
                        case 'addEventListener' : 
                            obj[index] = 'addEventListener' in window;
                            //obj[index] = false;
                            break;
                        case 'svg' : 
                            obj[index] = document.createElement('svg').outerHTML !== undefined; 
                            break;
                        default: 
                            //obj[index] = index; 
                    }
                }
            }
            callback(this.allTrue(obj));
        },

        allTrue: function (obj){
          for(var o in obj)
              if(!obj[o]) return false;
            
          return true;
        },

        loads: function( roots ){

            var c = roots.c;
            var t = roots.t;

            //////////////////////////////////////// carga de css
            
            for (var i in c) { 
                if (c.hasOwnProperty(i)) { 
                    //console.log('Loading css: '+ c[i]);
                    farm.fn.css( farm.r.base_url+c[i]+'.css' );
                }
            }
            ////////////////////////////////////////// Carga de templates

            for (var i in t) { 
                if (t.hasOwnProperty(i)) { 
                    //console.log('Loading templates: '+ t[i]);
                    farm.fn.js(farm.r.base_url+t[i]+'.js');
                }
            }
        }
    }
};


;(function() {
    "use strict";

    /*
    var d = new Date();
    var n = d.getTime();
    console.log('@@@@@@@@@@ listo function', n)
    */

    // Main entry point that gets included in index.html
    // checks for node-webkit before requirejs pipeline.

    // CHECKING FOR NODE-WEBKIT...
    // solves name-conflict with require statement from requirejs
    /*
    if (window && window.require) {

        //console.log("app.js (node-webkit): initializing nw.gui");
        var nwgui = require('nw.gui');
        window.nwgui = nwgui;

        //console.log("app.js (node-webkit): storing window");
        window.nwWindow = nwgui.Window.get();    

        //console.log("app.js (node-webkit): moving require to requirenw");
        window.requirenw = window.require;
        delete window.require;
        window.requirenw.version = process.versions.node;
        delete process.versions.node;
    }
    */

    //console.log("app.js: initializing requirejs main.js");

    //---------------------------- Carga de las opts

    farm.fn.js(farm.f.r.options, 's_opts', function() {

        if(farm.o.ctm){
            farm.fn.cut_the_mustard(function(response){
                if(response){
                    load_data();
                }else{
                    farm.fn.js(farm.r.ctm, 's_ctm', function() {
                        // la function debe llamarse ctm -> var ctm = function(){}
                        ctm();
                        return false;
                    });
                }
            });

            //console.log("%c filter cut_the_mustard:", "background: #222; color: #bada55", ctm);
        }
        else{

            load_data();
        }

        //---------------------------- 

        function load_data() {
            if(farm.o.opts_ext){

                farm.fn.js(farm.r.base_url+farm.r.options_ext, 's_opts_ext', function() {

                    var bmo = farm.f.e.rq();

                    //console.log("%c bmo:", "background: #222; color: #bada55", bmo);

                    var m = farm.r.require = bmo.m,
                        o = farm.r.others  = bmo.o;

                    farm.fn.js(farm.r.base_url+o, 's_others', function() {

                        farm.f.e.ot(function(response){
                            if(farm.o.dev===true)
                                farm.fn.loads(response);
                            load_end(m);
                        });
                    });
                });

            }else{

                var m = farm.r.require, //require
                    o = farm.r.others;  //others roots 

                farm.fn.js( o, 's_others', function() {

                    var obj = {
                        c : farm.f.c, //css
                        t : farm.f.t  //remplates
                    } 
                    if(farm.o.dev===true)
                        farm.fn.loads(obj);
                    load_end(m);
                });
            }
        }

        function load_end(m) {
            
            /* Original
            var script = document.createElement("script");
            script.setAttribute("data-main", loadjs); // main entry point requirejs
            script.src = "node_modules/requirejs/require.js"; // link to require.js
            document.body.appendChild(script);
            */

            var script = document.createElement("script");
            if(farm.o.dev===true){
                script.setAttribute("data-main", farm.r.base_url+m); // main entry point requirejs
                script.src = farm.r.base_url+farm.r.requirejs; // link to require.js
            }
            else{
                script.setAttribute("data-main", 'index'); // main entry point requirejs
                script.src = farm.r.min_script; // link to require.js

                var scriptTpl = document.createElement("script");
                scriptTpl.src = farm.r.min_template;
                document.body.appendChild(scriptTpl);

                farm.fn.css( farm.r.min_css );
            }
            document.body.appendChild(script);
        }     
    });

}()); // immediately executed.

