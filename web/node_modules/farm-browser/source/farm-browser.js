/*! farm_browser v0.00.0 | (c) 2016 SAM Staff, Inc. | 

                               \|||/
                               (o o)
                      ------ooO-(_)-Ooo------

*/

//if(typeof(farm) === 'undefined' ){ var farm = {}; }

(function(root, factory) {
    if (typeof define === 'function' && define.amd) {
        define([], factory);
    } else if (typeof exports === 'object') {
        module.exports = factory();
    } else {
        root.farm_browser = factory();
    }
}(this, function() {
    'use strict';

    var defaults = {
        //filter : { 'mozilla':'22', 'chrome':'20', 'msie':'10','safari':'6','opera':'15' },
        //close  : function (data){  console.log(data); return true;  }

    };
    var opts = '';

    function farm_browser(options) {
        opts = extend( defaults, options);
        farm_browser.start();
    };

    farm_browser.start = function() {
        //console.log(opts)

        var n =  ua_browser();

        if(opts.filter){
                n.passFilter = filter( n, opts.filter)
                opts.close( n );
        }
        else{
                opts.close( n );
        } 
    };

    // bwstatus = { 'mozilla':'22', 'chrome':'20', 'msie':'10','safari':'6','opera':'15' }

    function filter( bw, bwstatus ){ 
        var n = bw, browserStatus = false;

        for(var index in bwstatus){
            browserStatus = (n[index]  && n.version >= parseInt(bwstatus[index]));
            if(browserStatus)return browserStatus;
        }
        return browserStatus;
    };

    /////////////////////////////////////////////////////////////////////////////////

    /*Browser detection patch*/
    function ua_browser(){
        var nAgt = navigator.userAgent,
            browser = {};

        browser = {};
        browser.mozilla = false;
        browser.webkit = false;
        browser.opera = false;
        browser.safari = false;
        browser.chrome = false;
        browser.msie = false;

        browser.ua = nAgt;

        browser.name  = navigator.appName;
        browser.fullVersion  = ''+parseFloat(navigator.appVersion);
        browser.majorVersion = parseInt(navigator.appVersion,10);
        var nameOffset,verOffset,ix;

        // In Opera, the true version is after "Opera" or after "Version"
        if ((verOffset=nAgt.indexOf("Opera"))!=-1) {
            browser.opera = true;
            browser.name = "Opera";
            browser.fullVersion = nAgt.substring(verOffset+6);
            if ((verOffset=nAgt.indexOf("Version"))!=-1)
                browser.fullVersion = nAgt.substring(verOffset+8);
        }

        // In Opera > 20 the true version is after "OPR"
        else if ((verOffset=nAgt.indexOf("OPR"))!=-1) {
            browser.opera = true;
            browser.name = "Opera";
            browser.fullVersion = nAgt.substring(verOffset+4);
        }

        // In MSIE < 11, the true version is after "MSIE" in userAgent
        else if ( (verOffset=nAgt.indexOf("MSIE"))!=-1) {
            browser.msie = true;
            browser.name = "Microsoft Internet Explorer";
            browser.fullVersion = nAgt.substring(verOffset+5);
        }

        // In TRIDENT (IE11) => 11, the true version is after "rv:" in userAgent
        else if (nAgt.indexOf("Trident")!=-1 ) {
            browser.msie = true;
            browser.name = "Microsoft Internet Explorer";
            var start = nAgt.indexOf("rv:")+3;
            var end = start+4;
            browser.fullVersion = nAgt.substring(start,end);
        }

        // In Chrome, the true version is after "Chrome"
        else if ((verOffset=nAgt.indexOf("Chrome"))!=-1) {
            browser.webkit = true;
            browser.chrome = true;
            browser.name = "Chrome";
            browser.fullVersion = nAgt.substring(verOffset+7);
        }
        // In Safari, the true version is after "Safari" or after "Version"
        else if ((verOffset=nAgt.indexOf("Safari"))!=-1) {
            browser.webkit = true;
            browser.safari = true;
            browser.name = "Safari";
            browser.fullVersion = nAgt.substring(verOffset+7);
            if ((verOffset=nAgt.indexOf("Version"))!=-1)
                browser.fullVersion = nAgt.substring(verOffset+8);
        }
        // In Safari, the true version is after "Safari" or after "Version"
        else if ((verOffset=nAgt.indexOf("AppleWebkit"))!=-1) {
            browser.webkit = true;
            browser.name = "Safari";
            browser.fullVersion = nAgt.substring(verOffset+7);
            if ((verOffset=nAgt.indexOf("Version"))!=-1)
                browser.fullVersion = nAgt.substring(verOffset+8);
        }
        // In Firefox, the true version is after "Firefox"
        else if ((verOffset=nAgt.indexOf("Firefox"))!=-1) {
            browser.mozilla = true;
            browser.name = "Firefox";
            browser.fullVersion = nAgt.substring(verOffset+8);
        }
        // In most other browsers, "name/version" is at the end of userAgent
        else if ( (nameOffset=nAgt.lastIndexOf(' ')+1) < (verOffset=nAgt.lastIndexOf('/')) ){
            browser.name = nAgt.substring(nameOffset,verOffset);
            browser.fullVersion = nAgt.substring(verOffset+1);
            if (browser.name.toLowerCase()==browser.name.toUpperCase()) {
                browser.name = navigator.appName;
            }
        }

        // trim the fullVersion string at semicolon/space if present
        if ((ix=browser.fullVersion.indexOf(";"))!=-1)
            browser.fullVersion=browser.fullVersion.substring(0,ix);
        if ((ix=browser.fullVersion.indexOf(" "))!=-1)
            browser.fullVersion=browser.fullVersion.substring(0,ix);

        browser.majorVersion = parseInt(''+browser.fullVersion,10);
        if (isNaN(browser.majorVersion)) {
            browser.fullVersion  = ''+parseFloat(navigator.appVersion);
            browser.majorVersion = parseInt(navigator.appVersion,10);
        }
        browser.version = browser.majorVersion;
        var OSName="unknown OS";
        if      ((verOffset=nAgt.indexOf("Win"))!=-1)   { OSName="Windows"; }
        else if ((verOffset=nAgt.indexOf("Mac"))!=-1)   { OSName="MacOSX"; }
        else if ((verOffset=nAgt.indexOf("X11"))!=-1)   { OSName="UNIX"; }
        else if ((verOffset=nAgt.indexOf("Linux"))!=-1) { OSName="Linux"; }
        else if ((verOffset=nAgt.indexOf("Mobile"))!=-1){ OSName="Mobile"; }

        browser.os = OSName;
        browser.platform = navigator.platform;


        /*Check all mobile environments*/
        browser.android = (/Android/i).test(nAgt);
        browser.blackberry = (/BlackBerry/i).test(nAgt);
        browser.ios = (/iPhone|iPad|iPod/i).test(nAgt);
        browser.operaMobile = (/Opera Mini/i).test(nAgt);
        browser.windowsMobile = (/IEMobile/i).test(nAgt);
        browser.mobile = browser.android || browser.blackberry || browser.ios || browser.windowsMobile || browser.operaMobile;

        return browser;
    }

    /////////////////////////////////////////////////////////////////////////////////

    //http://stackoverflow.com/questions/11197247/javascript-equivalent-of-jquerys-extend-method
    function extend(){
        for(var i=1; i<arguments.length; i++)
            for(var key in arguments[i])
                if(arguments[i].hasOwnProperty(key))
                    arguments[0][key] = arguments[i][key];

        return arguments[0];
    }

    return farm_browser;
}));







